import geopandas as gpd
import rasterio
import scipy.sparse as sparse
from rasterio.plot import show
from rasterio.plot import show_hist
import rasterstats
import matplotlib.pyplot as plt
import pandas as pd
import os
import numpy as np

#creating empty dataframe called table
table = pd.DataFrame(index = np.arange(0,1))


stations = gpd.read_file(r'C:\Users\bikra\Desktop\SPI\Points.shp')
stations['lon'] = stations['geometry'].x
stations['lat'] = stations['geometry'].y

Matrix = pd.DataFrame()

i=0
# Iterate through the rasters and save the data as individual arrays to a Matrix 
for files in os.listdir(r'C:\Users\bikra\Desktop\SPI'):
    if files[-4: ] == '.tif':
        dataset = rasterio.open(r'C:\Users\bikra\Desktop\SPI'+'\\'+files)
        data_array = dataset.read(1)
        data_array_sparse = sparse.coo_matrix(data_array, shape = (63,126))
        data = files[ 4:10]
        Matrix[data] = data_array_sparse.toarray().tolist()
        print('Processing is done for the raster: '+ files[:-4])
        i+1

# Iterate through the stations and get the corresponding row and column for the related x, y coordinates    
for index, row in stations.iterrows():
    station_name = str(row['OBJECTID'])
    lon = float(row['lon'])
    lat = float(row['lat'])
    x,y = (lon, lat)
    row, col = dataset.index(x, y)
    print('Processing: '+ station_name)
    
    # Pick the rainfall value from each stored raster array and record it into the previously created 'table'
    for records_date in Matrix.columns.tolist():
        a = Matrix[records_date]
        rf_value = a.loc[int(row)][int(col)]
        table[records_date] = rf_value
        transpose_mat = table.T
        transpose_mat.rename(columns = {0: 'Rainfall(mm)'}, inplace = True)
    
    transpose_mat.to_csv(r'C:\Users\bikra\Desktop\SPI\output'+'\\'+station_name+'.csv')
